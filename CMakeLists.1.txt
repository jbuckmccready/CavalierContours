cmake_minimum_required(VERSION 3.21)

if (NOT DEFINED PROJECT_NAME)
  set(NOT_SUBPROJECT ON)
endif()

project(
    CavalierNew
    VERSION 1.5.0
    LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
enable_language(C)

find_package(GTest REQUIRED)
enable_testing()
include(GoogleTest)

set(CAVC_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/build/include/cavc)
set(CAVC_C_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/build/include/cavc_c)
set(CAVC_INTERNAL_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/build/include/cavc/internal)

if (EXISTS ${CAVC_INCLUDE_DIR})
    file(REMOVE_RECURSE ${CAVC_INCLUDE_DIR})
endif()

set(CAVC_HEADERS
    include/intrlineseg2circle2.hpp
    include/intrlineseg2lineseg2.hpp
    include/mathutils.hpp
    include/intrcircle2circle2.hpp
    include/vector.hpp
    include/plinesegment.hpp
    include/polyline.hpp
    include/polylinecombine.hpp
    include/polylineintersects.hpp
    include/polylineoffset.hpp
    include/polylineoffsetislands.hpp
    include/staticspatialindex.hpp
    include/vector2.hpp
)

foreach(CAVC_HEADER ${CAVC_HEADERS})
    file(COPY ${CAVC_HEADER} DESTINATION ${CAVC_INCLUDE_DIR})
endforeach()

set(CAVC_INTERNAL_HEADERS
    include/internal/diagnostics.hpp
    include/internal/common.hpp
)

foreach(CAVC_INTERNAL_HEADER ${CAVC_INTERNAL_HEADERS})
    file(COPY ${CAVC_INTERNAL_HEADER} DESTINATION ${CAVC_INTERNAL_INCLUDE_DIR})
endforeach()
file(COPY src/cavaliercontours.h DESTINATION ${CAVC_C_INCLUDE_DIR})

# compile library
option(CAVC_HEADER_ONLY "C++ header only library of CavalierContours, if ON then no library is built" OFF)

set(CAVC_LIB_NAME cavcontours)

if(CAVC_HEADER_ONLY)
    set(CAVC_CPP_HEADER_ONLY_LIB ${CAVC_LIB_NAME})
else()
    set(CAVC_CPP_HEADER_ONLY_LIB ${CAVC_LIB_NAME}_header_only)
    set(CAVC_C_API_LIB ${CAVC_LIB_NAME})
endif()

add_library(${CAVC_CPP_HEADER_ONLY_LIB} INTERFACE)

target_include_directories(${CAVC_CPP_HEADER_ONLY_LIB}
    INTERFACE include/)

if(NOT CAVC_HEADER_ONLY)
    add_library(${CAVC_C_API_LIB}
        STATIC src/cavaliercontours.cpp)
    target_compile_definitions(${CAVC_C_API_LIB}
        PUBLIC CAVC_STATIC_LIB)
  # compiler warnings, note: not using /W4 on MSVC since it emits warning due to default of /W3
  # from cmake
    if(MSVC)
        if(${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
        target_compile_options(${CAVC_C_API_LIB} PRIVATE
            /clang:-Werror /clang:-Wall /clang:-Wextra /clang:-pedantic-errors /clang:-Wsign-conversion /clang:-Wconversion)
        endif()
        target_compile_options(${CAVC_C_API_LIB} PRIVATE
        /WX)
    else()
        target_compile_options(${CAVC_C_API_LIB} PRIVATE
        -Werror -Wall -Wextra -pedantic-errors -Wsign-conversion -Wconversion)
    endif()
    target_compile_definitions(${CAVC_C_API_LIB}
        PRIVATE CAVC_EXPORTS)
    target_include_directories(${CAVC_C_API_LIB}
        PUBLIC c_api_include/)
    target_link_libraries(${CAVC_C_API_LIB}
        PRIVATE ${CAVC_CPP_HEADER_ONLY_LIB})
endif()

if(NOT_SUBPROJECT)
    add_subdirectory(tests)
endif()
